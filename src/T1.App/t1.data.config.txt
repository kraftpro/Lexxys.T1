data

	entityName
		# Rename generated entity name part
		%item	original		destination
		-		Datum			Data

	reference
		# Set reference by field name
		%item	name			value			type
		-		Administrator	Person.ID		int


	default
		# Set default value by field name
		%item	name			value			type
		-		Administrator	{{user}}		int
			:force	true		// replace even default value exists
		-		DateCreated		{{timestamp}}	DateTime

	rename
		# Rename fields
		%item	original					destination
		-		Incorrect					Correct

	validate
		# Validation rule by field name
		%item	name						value			type		table
		-		Phone\d*$					phone			string
		-		Email\d*$					email			string
		-		Url\d*$						url				string
		-		Ssn$						ssn				string

	expression
		# convert SQL dafaults expressions to C#
		%item   type        find                                                replace
		-		*			^\s*\((.*)\s*\)$									$1
			:repeat true
			:continue true
		-       decimal     ^([+-]?\d+(\.\d+)?)$                                $1m
		-       decimal     ^([+-]?\d+)\.$                                      $1m
		-       decimal     ^([+-])?(\.\d+)$                                    ${1}0$2m
		-       double      ^([+-]?\d+)$                                        $1.0
		-       double      ^([+-]?\d+)\.$                                      $1.0
		-       double      ^([+-])?(\.\d+)$                                    ${1}0$2
		-       Guid        ^newid\(\)$                                         Guid.NewGuid()
		-       bool        ^0$                                                 false
		-       bool        ^1$                                                 true
		-       string     '^replicate\("(.)",\s*\(?(\d+)\)?\)$'                "new String('$1', $2)"
		-		DateTime	\bsysdatetime\(\)									{{LocalTime}}
			:continue true
		-		DateTime	\bgetdate\(\)										{{LocalTime}}
			:continue true
		-		DateTime	\bsysutcdatetime\(\)								{{UtcTime}}
			:continue true
		-		DateTime	\bgetutcdate\(\)									{{UtcTime}}
			:continue true
		-       DateTime    ^'(\d{4})-(\d\d)-(\d\d)'$							new DateTime($1, $2, $3)
		-       DateTime    ^'(\d{4})(\d\d)(\d\d)'$								new DateTime($1, $2, $3)
		-       DateTime    ^'(?:([1-9]\d)|0?(\d))/(?:([1-9]\d)|0?(\d))/(\d{4})'$	new DateTime($5, $1$2, $3$4)

	# Regular expression to select tables to exclude
	exclude <<
		|.*_Old|.*_Bak|.*_Tmp
		>>
	query <<
		select
			c.object_id EntityId,
			db_name() [DatabaseName],
			object_schema_name(c.object_id) [Schema],
			object_name(c.object_id) [Entity],
			c.name [Field],
			t.name [Type],
			cast(c.max_length as int) [Size],
			cast(c.precision as int) [Precision],
			cast(c.scale as int) [Scale],
			c.is_nullable [Nullable],
			c.is_identity [Identity],
			c.is_computed [Computed],
			(select top 1 definition from sys.default_constraints where object_id = c.default_object_id) [DefaultValue],
			isnull((select top 1 1 from sys.indexes i join sys.index_columns j on j.index_id = i.index_id and j.object_id = i.object_id where i.is_primary_key = 1 and i.object_id = c.object_id and j.column_id = c.column_id ), 0) PK,
			(select top 1 object_name(f.referenced_object_id) + '.' + col_name(f.referenced_object_id, f.referenced_column_id) from sys.foreign_key_columns f where f.parent_object_id = c.object_id and f.parent_column_id = c.column_id) Reference,
			cast(c.column_id as int) [ColumnId]
		from sys.all_columns c
			join sys.types t on t.user_type_id = c.user_type_id

		where objectpropertyex(c.object_id, 'schemaid') <> schema_id('sys')
			and objectpropertyex(c.object_id, 'schemaid') <> schema_id('information_schema')
			and c.name not like '%.bak'
			{{and object_schema_name(c.object_id) in ({Schema:'$_'})}}
			{{and objectpropertyex(c.object_id, 'basetype') in ({Kind:'$_'})}}
			{{and c.object_id in ({Include:isnull(object_id('$_'), 0)})}}
			{{and not c.object_id in ({Exclude:isnull(object_id('$_'), 0)})}}

		order by [Schema], [Entity], [ColumnId];
		>>
